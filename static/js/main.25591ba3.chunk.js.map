{"version":3,"sources":["components/Form/Form.tsx","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["Form","users","todos","setTodos","reg","useState","title","setTitle","userId","setUserId","titleError","setTitleError","userError","setUserError","newTodo","id","sort","a","b","trim","completed","user","find","action","method","onSubmit","e","preventDefault","currentTodos","className","type","placeholder","value","onChange","test","target","lastIndex","disabled","map","name","UserInfo","href","email","TodoInfo","todo","cn","TodoList","username","todosUsers","usersFromServer","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.25591ba3.chunk.js","sourcesContent":["import React, { Dispatch, SetStateAction, useState } from 'react';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ntype Props = {\n  users: User[];\n  todos: Todo[];\n  setTodos: Dispatch<SetStateAction<Todo[]>>;\n};\n\nexport const Form: React.FC<Props> = ({\n  users,\n  todos,\n  setTodos,\n}) => {\n  const reg = /^[a-zа-яіїґє'0-9,.\\s]+$/i;\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [titleError, setTitleError] = useState(false);\n  const [userError, setUserError] = useState(false);\n\n  const todoId = [...todos].sort((a, b) => b.id - a.id)[0].id + 1;\n  const newTodo = {\n    id: todoId,\n    title: title.trim(),\n    completed: false,\n    userId,\n    user: users.find(user => user.id === userId) || null,\n  };\n\n  const hendleTitleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (reg.test(e.target.value) || !e.target.value) {\n      reg.lastIndex = 0;\n      setTitle(e.target.value);\n    }\n\n    setTitleError(false);\n  };\n\n  const hendleUserIdChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+e.target.value);\n    setUserError(false);\n  };\n\n  const hendleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    if (!title.trim()) {\n      setTitleError(true);\n    }\n\n    if (!userId) {\n      setUserError(true);\n    }\n\n    if (title.trim() && userId) {\n      setTodos(currentTodos => ([\n        ...currentTodos,\n        newTodo,\n      ]));\n\n      setTitle('');\n      setUserId(0);\n    }\n  };\n\n  return (\n    <form\n      action=\"/api/todos\"\n      method=\"POST\"\n      onSubmit={hendleSubmit}\n    >\n      <div className=\"field\">\n        <label>\n          Title:\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={hendleTitleChange}\n          />\n        </label>\n\n        {titleError && <span className=\"error\">Please enter a title</span>}\n      </div>\n\n      <div className=\"field\">\n        <label>\n          User:\n          <select\n            data-cy=\"userSelect\"\n            value={userId}\n            onChange={hendleUserIdChange}\n\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {users.map(user => (\n              <option\n                value={user.id}\n                key={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n        </label>\n\n        {userError && <span className=\"error\">Please choose a user</span>}\n      </div>\n\n      <button type=\"submit\" data-cy=\"submitButton\">\n        Add\n      </button>\n    </form>\n  );\n};\n","import React from 'react';\nimport { User } from '../../types/User';\nimport './UserInfo.scss';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport './TodoInfo.scss';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  return (\n    <article\n      data-id={todo.id}\n      className={cn('TodoInfo', {\n        'TodoInfo--completed': todo.completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n\n      {todo.user && <UserInfo user={todo.user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo\n          key={todo.id}\n          todo={todo}\n        />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { useState } from 'react';\nimport './App.scss';\nimport { Form } from './components/Form';\nimport { TodoList } from './components/TodoList';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nconst todosUsers = todosFromServer.map(todo => ({\n  ...todo,\n  user: usersFromServer.find(user => user.id === todo.userId) || null,\n}));\n\nexport const App = () => {\n  const [todos, setTodos] = useState(todosUsers);\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <Form\n        users={usersFromServer}\n        setTodos={setTodos}\n        todos={todos}\n      />\n\n      <TodoList\n        todos={todos}\n      />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}